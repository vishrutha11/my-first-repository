name: CI Security & Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan:
    name: Lint, Unit Tests, Security Scan, Trivy, and Docker Build
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install fastapi pydantic requests pytest pytest-cov flake8 gitleaks trivy

      # 4Ô∏è‚É£ Run Linter
      - name: Run Linter
        run: |
          flake8 . --max-line-length=88 --statistics

      # 5Ô∏è‚É£ Run Unit Tests with Coverage (Fail if <80%)
      - name: Run Unit Tests with Coverage
        run: |
          pytest tests/ --maxfail=1 --disable-warnings --cov=./ --cov-fail-under=80

      # 6Ô∏è‚É£ Secret Detection
      - name: Detect secrets
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          fail: true

      # 7Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 8Ô∏è‚É£ Trivy FS Scan (scan source code before build)
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          exit-code: 1
          format: 'table'

      # 9Ô∏è‚É£ Build Docker Image
      - name: Build Docker image
        run: |
          docker build -t pythonapp:latest .

      # üîü Trivy Image Scan (after build)
      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: pythonapp:latest
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          exit-code: 1
          format: 'table'

      # 1Ô∏è‚É£1Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 1Ô∏è‚É£2Ô∏è‚É£ Push Docker Image
      - name: Push Docker image to Docker Hub
        run: |
          docker tag pythonapp:latest preethi1100/python_image:latest
          docker push preethi1100/python_image:latest
